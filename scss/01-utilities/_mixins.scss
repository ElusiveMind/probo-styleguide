@function em($pixel) {
  @return $pixel / 16px * 1em;
}

// https://gist.github.com/webgefrickel/4530526
// usage:
// @include rem(font-size, 16px)
// @include rem(margin, 0 auto 10px)
// @include rem(padding, inherit)

@mixin rem($property, $values) {
  // Create a couple of empty lists as output buffers.
  $default-browser-font-size: 10px;
  $rem-values: ();

  // Loop through the $values list
  @each $value in $values {
    // For each property value, if it's in rem or px, derive both rem and
    // px values for it and add those to the end of the appropriate buffer.
    // Ensure all pixel values are rounded to the nearest pixel.
    @if $value == 0 {
      // 0 -- use it without a unit
      $rem-values: join($rem-values, 0);
    }
    @else if type-of($value) == number and not unitless($value) and (unit($value) == px) {
      // px value given - calculate rem value from base-font-size
      $new-rem-value: $value / $default-browser-font-size;
      $rem-values: join($rem-values, #{$new-rem-value}rem);
    }
    @else if $value == auto or $value == inherit {
      $rem-values: join($rem-values, $value);
    }
    @else {
      $rem-values: join($rem-values, #{$value}rem);
    }
  }

  // output the converted rules
  #{$property}: $rem-values;
}

@mixin white-text {
  color: $probo-pale-medium;
  h1, h2, h3, h4, h5 {
    color: $probo-pale-medium;
  }
}


@mixin link-colors($color, $hover: $color, $active: $color, $focus: $color) {
  color: $color;

  &:hover {
    color: $hover;
  }

  &:active {
    color: $active;
  }

  &:focus {
    color: $focus;
  }
}

@mixin inline-block {
  *vertical-align: auto;
  *zoom: 1;
  *display: inline;
  display: inline-block;
  vertical-align: middle;
}

@mixin cf {
  *zoom: 1;

  &::after,
  &::before {
    content: ' ';
    display: table;
  }

  &::after {
    clear: both;
  }
}

@mixin button($bg-color: $base-font-color, $font-color: $probo-white, $border-color: $bg-color, $hover-bg-color: darken($bg-color, 10%), $hover-font-color: $font-color, $hover-border-color: darken($border-color, 10%)) {
	@include inline-block;
  @include rem(font-size, 18px);
  @extend .f-semi-bold;

  font-family: $sans-serif;
  line-height: (24 / 17);
  text-decoration: none;
  padding: 8px $base-margin * 2;
  border-radius: $border-radius;
  cursor: pointer;
  border: 2px solid $base-font-color;
  transition: background 0.1s ease-in-out, color 0.1s ease-in-out;

  &:hover,
  &:active,
  &:focus {
    text-decoration: none;
  }

  &.disabled,
  &.disabled:hover,
  &:disabled,
  &:disabled:hover {
    cursor: default;
  }
}

@mixin button-colors($bg-color: $base-font-color, $font-color: $probo-white, $border-color: $bg-color, $hover-bg-color: darken($bg-color, 10%), $hover-font-color: $font-color, $hover-border-color: darken($border-color, 10%)) {
  background-color: $bg-color;
  color: $font-color;
  border-color: $border-color;

  &:hover,
  &:active,
  &:focus {
    background-color: $hover-bg-color;
    color: $hover-font-color;
    border-color: $hover-border-color;
  }

  &.disabled,
  &.disabled:hover,
  &:disabled,
  &:disabled:hover {
    background-color: lighten($bg-color, 20%);
    color: lighten($font-color, 10%);
    border-color: lighten($border-color, 20%);
  }
}

@mixin button-colors-inverse($bg-color: $base-font-color, $font-color: $probo-white, $border-color: $bg-color, $hover-bg-color: darken($bg-color, 10%), $hover-font-color: $font-color, $hover-border-color: darken($border-color, 10%)) {
  @include button-colors($bg-color, $font-color, $border-color, $bg-color, darken($font-color, 10%), darken($border-color, 10%));
}

@mixin visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;

  &.focusable {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
  }
}

@mixin visuallyhidden-off {
  clip: auto;
  height: auto;
  width: auto;
  position: static;
  overflow: auto;
}

@mixin invisible {
  visibility: hidden;
}

@mixin hidden {
  display: none !important;
}

@mixin badge($color, $font: $probo-pale) {
  @include rem(font-size, 10px);

  border-radius: 50%;
  background-color: $color;
  color: $font;
  padding: 2px 6px;
}
